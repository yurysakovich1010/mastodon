- content_for :page_title do
  = site_hostname

- content_for :header_tags do
  %link{ rel: 'canonical', href: landing_url }/
  = render partial: 'shared/og'

- content_for :header do
  .container
    %nav.header
      .nav-left
        = render 'application/top_menu'

      .nav-right
        - if user_signed_in?

        - else
          = simple_form_for(new_user, url: user_session_path, namespace: 'login') do |f|
            %div.d-flex
              .fields-group.d-flex.justify-content-space-between
                - if use_seamless_external_login?
                  = f.input :email, placeholder: t('simple_form.labels.defaults.username_or_email'), input_html: { 'aria-label' => t('simple_form.labels.defaults.username_or_email') }, hint: false
                - else
                  = f.input :email, placeholder: t('simple_form.labels.defaults.email'), input_html: { 'aria-label' => t('simple_form.labels.defaults.email') }, hint: false

                = f.input :password, placeholder: t('simple_form.labels.defaults.password'), input_html: { 'aria-label' => t('simple_form.labels.defaults.password') }, hint: false

                = f.button :button, t('auth.login'), type: :submit, class: 'button button-primary button-login'

            %p.hint.subtle-hint.mt1= link_to t('auth.trouble_logging_in'), new_user_password_path

- content_for :footer do
  .d-flex
    %div
      %span
        = Time.new.year
      %span.text-capitalize.mr3
        = site_hostname
      %span.text-capitalize
        = t 'footer.all_rights_reserved'
    .spacer
    %div
      %span.mr3
        = link_to t('about.privacy_policy'), terms_path, class: 'decoration-none'
      %span
        = link_to t('about.terms'), terms_path, class: 'decoration-none'

.landing.home.mt5

  .landing__grid
    .landing__grid__column
      .logo-container
        %h1
          = link_to root_path do
            = image_tag @instance_presenter.hero&.file&.url || @instance_presenter.thumbnail&.file&.url || asset_pack_path('media/images/brighteon-social/logo.png'), alt: @instance_presenter.site_title

      %div.description
        = t('home.description', instance: content_tag(:span, site_hostname, class: 'text-capitalize')).html_safe

      %div.users_count.text-capitalize
        %strong= number_to_human @instance_presenter.user_count, strip_insignificant_zeros: true
        %span= t 'about.user_count_after', count: @instance_presenter.user_count

    .landing__grid__column.landing__grid__column-registration
      .box-widget
        .simple_form__overlay-area{ class: (closed_registrations? && @instance_presenter.closed_registrations_message.present?) ? 'simple_form__overlay-area__blurred' : '' }
          = simple_form_for(new_user, url: user_registration_path, namespace: 'registration') do |f|
            %p.lead= t('about.federation_hint_html', instance: content_tag(:strong, site_hostname))

            .fields-group
              = f.simple_fields_for :account do |account_fields|
                = account_fields.input :username, wrapper: :with_label, label: false, required: true, input_html: { 'aria-label' => t('simple_form.labels.defaults.username'), :autocomplete => 'off', placeholder: t('simple_form.labels.defaults.username') }, append: "@#{site_hostname}", hint: false, disabled: closed_registrations?

              = f.input :email, placeholder: t('simple_form.labels.defaults.email'), required: true, input_html: { 'aria-label' => t('simple_form.labels.defaults.email'), :autocomplete => 'off' }, hint: false, disabled: closed_registrations?
              = f.input :password, placeholder: t('simple_form.labels.defaults.password'), required: true, input_html: { 'aria-label' => t('simple_form.labels.defaults.password'), :autocomplete => 'off' }, hint: false, disabled: closed_registrations?
              = f.input :password_confirmation, placeholder: t('simple_form.labels.defaults.confirm_password'), required: true, input_html: { 'aria-label' => t('simple_form.labels.defaults.confirm_password'), :autocomplete => 'off' }, hint: false, disabled: closed_registrations?

            - if approved_registrations?
              .fields-group
                = f.simple_fields_for :invite_request do |invite_request_fields|
                  = invite_request_fields.input :text, as: :text, wrapper: :with_block_label, required: false

            .fields-group
              = f.input :agreement, as: :boolean, wrapper: :with_label, label: t('auth.checkbox_agreement_html', rules_path: about_more_path, terms_path: terms_path), disabled: closed_registrations?

            .actions
              = f.button :button, sign_up_message, type: :submit, class: 'button button-primary button-signup', disabled: closed_registrations?

          - if closed_registrations? && @instance_presenter.closed_registrations_message.present?
            .simple_form__overlay-area__overlay
              .simple_form__overlay-area__overlay__content.rich-formatting
                .block-icon= fa_icon 'warning'
                = @instance_presenter.closed_registrations_message.html_safe
